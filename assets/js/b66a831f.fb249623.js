"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8485],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>b});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(a),m=r,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return a?n.createElement(b,o(o({ref:t},u),{},{components:a})):n.createElement(b,o({ref:t},u))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7740:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=a(3117),r=(a(7294),a(3905));const i={sidebar_position:2},o="FAQ",l={unversionedId:"resources/faq",id:"resources/faq",title:"FAQ",description:"Is Reactant based entirely on the React library?",source:"@site/docs/resources/faq.md",sourceDirName:"resources",slug:"/resources/faq",permalink:"/docs/resources/faq",draft:!1,editUrl:"https://github.com/unadlib/reactant/tree/master/website/docs/resources/faq.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Examples",permalink:"/docs/resources/examples"},next:{title:"Performance",permalink:"/docs/resources/performance"}},s={},c=[{value:"Is Reactant based entirely on the React library?",id:"is-reactant-based-entirely-on-the-react-library",level:2},{value:"Why is Reactant&#39;s state management immutable, but the updated <code>@action</code> does mutation?",id:"why-is-reactants-state-management-immutable-but-the-updated-action-does-mutation",level:2},{value:"Reactant integrates Redux as a state management library, so can I use other state management libraries?",id:"reactant-integrates-redux-as-a-state-management-library-so-can-i-use-other-state-management-libraries",level:2},{value:"Tips",id:"tips",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"faq"},"FAQ"),(0,r.kt)("h2",{id:"is-reactant-based-entirely-on-the-react-library"},"Is Reactant based entirely on the React library?"),(0,r.kt)("p",null,"Yes."),(0,r.kt)("p",null,"So almost all of the libraries in React's ecosystem can be integrated and used in Reactant. For example, Reactant already provides ",(0,r.kt)("inlineCode",{parentName:"p"},"reactant-storage"),", which is a plugin module for Reactant based on ",(0,r.kt)("inlineCode",{parentName:"p"},"redux-persist"),"; and also provides ",(0,r.kt)("inlineCode",{parentName:"p"},"reactant-router"),", which is another plugin module for Reactant based on ",(0,r.kt)("inlineCode",{parentName:"p"},"react-router"),", and so on. "),(0,r.kt)("p",null,"In fact, using concepts such as Reactant's ",(0,r.kt)("inlineCode",{parentName:"p"},"PluginModule"),", you can encapsulate almost any React ecosystem based library to achieve a complete modular model for your own use."),(0,r.kt)("h2",{id:"why-is-reactants-state-management-immutable-but-the-updated-action-does-mutation"},"Why is Reactant's state management immutable, but the updated ",(0,r.kt)("inlineCode",{parentName:"h2"},"@action")," does mutation?"),(0,r.kt)("p",null,"Because Reactant's state management is based on ",(0,r.kt)("inlineCode",{parentName:"p"},"Redux")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Mutative"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Redux")," ensures that Reactant's default shared state is immutable, and ",(0,r.kt)("inlineCode",{parentName:"p"},"Mutative")," allows immutable shared states to be updated succinctly by mutation."),(0,r.kt)("h2",{id:"reactant-integrates-redux-as-a-state-management-library-so-can-i-use-other-state-management-libraries"},"Reactant integrates Redux as a state management library, so can I use other state management libraries?"),(0,r.kt)("p",null,"Of course."),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"@state")," is not used at all, then Reactant will not run ",(0,r.kt)("inlineCode",{parentName:"p"},"Redux"),", so you can use any state management library you need, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"MobX"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"MST"),", etc."),(0,r.kt)("h2",{id:"tips"},"Tips"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ViewModule")," class ",(0,r.kt)("inlineCode",{parentName:"li"},"component")," support inheritance, and it does not support call ",(0,r.kt)("inlineCode",{parentName:"li"},"super.component")," for JSX Element but support call function."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@action")," support inheritance and call ",(0,r.kt)("inlineCode",{parentName:"li"},"super"),". And if it is a cross-module call to another ",(0,r.kt)("inlineCode",{parentName:"li"},"@action")," decorated function within an ",(0,r.kt)("inlineCode",{parentName:"li"},"@action")," decorated function, it will automatically merge the dispatch updates."),(0,r.kt)("li",{parentName:"ul"},"Performance optimization",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Using ",(0,r.kt)("inlineCode",{parentName:"li"},"@computed")," for derived data."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"batch")," can be used to optimize rendering performance."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dispatch")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"createState")," support Redux action and reducer."))),(0,r.kt)("li",{parentName:"ul"},"Decorators",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Default injection, no require ",(0,r.kt)("inlineCode",{parentName:"li"},"@inject")," unless binding identifier."),(0,r.kt)("li",{parentName:"ul"},"All decorators support any identifier."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@multiInject")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"@multiOptional")," require identifier parameter."))),(0,r.kt)("li",{parentName:"ul"},"The module of property ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," will be changed, if the module of ",(0,r.kt)("inlineCode",{parentName:"li"},"identifier")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," or module is injected in multiple.")))}d.isMDXComponent=!0}}]);