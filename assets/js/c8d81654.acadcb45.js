"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8574],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>y});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,y=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return t?a.createElement(y,i(i({ref:n},u),{},{components:t})):a.createElement(y,i({ref:n},u))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5848:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=t(3117),r=(t(7294),t(3905));const o={sidebar_position:6},i="Dynamic Modules",l={unversionedId:"advanced-guides/dynamic-modules",id:"advanced-guides/dynamic-modules",title:"Dynamic Modules",description:"Code-splitting is important for many large projects, and Reactant supports dynamic loading of split code by modules.",source:"@site/docs/advanced-guides/dynamic-modules.md",sourceDirName:"advanced-guides",slug:"/advanced-guides/dynamic-modules",permalink:"/docs/advanced-guides/dynamic-modules",draft:!1,editUrl:"https://github.com/unadlib/reactant/tree/master/website/docs/advanced-guides/dynamic-modules.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docs",previous:{title:"Persistence",permalink:"/docs/advanced-guides/persistence"},next:{title:"Server-Side Rendering",permalink:"/docs/advanced-guides/server-side-rendering"}},s={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Usage",id:"usage",level:2}],u={toc:c},d="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dynamic-modules"},"Dynamic Modules"),(0,r.kt)("p",null,"Code-splitting is important for many large projects, and Reactant supports dynamic loading of split code by modules."),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Reactant supports dynamic module imports, make sure you set:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"comments: true")," in ",(0,r.kt)("inlineCode",{parentName:"li"},".babalrc")," (this is the default)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"chunkFilename: '[name].bundle.js'")," in your webpack config.")),(0,r.kt)("p",null,"If you are using Typescript, also make sure:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"removeComments: false")," under compilerOptions in ",(0,r.kt)("inlineCode",{parentName:"li"},"tsconfig.json"),"(this is the default)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'module: "esnext"')," in ",(0,r.kt)("inlineCode",{parentName:"li"},"tsconfig.json"),".")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Define a module file for dynamic imports ",(0,r.kt)("inlineCode",{parentName:"li"},"Counter.service.ts"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"@injectable()\nclass CounterService {\n  @state\n  count = 0;\n\n  @action\n  increase() {\n    this.count += 1;\n  }\n\n  @action\n  decrease() {\n    this.count -= 1;\n  }\n}\n\nexport { CounterService };\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"We can use utility type ",(0,r.kt)("inlineCode",{parentName:"li"},"ImportClass")," for definition as an interface type, and then using the standard dynamic import of API ",(0,r.kt)("inlineCode",{parentName:"li"},"import()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"@lazy()"),", and the ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/reactant-module/modules/core_load"},(0,r.kt)("inlineCode",{parentName:"a"},"load()"))," provided by Reactant, this will allow us to fully implement the Reactant dynamic module imports.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"@injectable()\nclass TodoService {\n  @state\n  list: string[] = [];\n\n  @action\n  add(text: string) {\n    this.list.push(text);\n  }\n}\n\n@injectable()\nclass AppView extends ViewModule {\n  constructor(public todo: TodoService) {\n    super();\n  }\n\n  loadCounter = async () => {\n    const { CounterService } = await import(\n      /* webpackChunkName: \"Counter.service\" */ './Counter.service'\n    );\n    await load(this, [{ provide: 'counter', useClass: CounterService }]);\n  };\n\n  @lazy('counter')\n  counter?: ImportClass<typeof import('./Counter.service'), 'CounterService'>;\n  // or use `import type { CounterService } from './Counter.service';` in TypeScript 3.8+\n\n  component() {\n    const { list, count } = useConnector(() => ({\n      list: this.todo.list,\n      count: this.counter?.count,\n    }));\n    const [value, setValue] = useState('');\n    return (\n      <>\n        <input onChange={(e) => setValue(e.target.value)} value={value} />\n        <button\n          type={'button'}\n          onClick={() => {\n            this.todo.add(value);\n            setValue('');\n          }}\n        >\n          Add Todo\n        </button>\n        <ul>\n          {list.map((text, key) => (\n            <li key={key}>{text}</li>\n          ))}\n        </ul>\n        <button type=\"button\" onClick={() => this.loadCounter()}>\n          load counter\n        </button>\n        {this.counter ? (\n          <button onClick={() => this.counter?.increase()}>{count}</button>\n        ) : (\n          'none'\n        )}\n      </>\n    );\n  }\n}\n\nconst app = createApp({\n  main: AppView,\n  modules: [],\n  render,\n});\n\napp.bootstrap(document.getElementById('app'));\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/unadlib/reactant-examples/tree/master/web/dynamic-module"},"Visit here to see the example source code.")),(0,r.kt)("p",null,"In brief, we can split the code and build a minimally modular App that dynamically loads modules via the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/reactant-module/modules/core_load"},(0,r.kt)("inlineCode",{parentName:"a"},"load()"))," API so we can run the app more efficiently and lightly. It usually works with ",(0,r.kt)("inlineCode",{parentName:"p"},"Suspense")," as well. You visit ",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/code-splitting.html"},"here")," for more information on the component code-splitting."))}p.isMDXComponent=!0}}]);