"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5347],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,b=u["".concat(c,".").concat(m)]||u[m]||p[m]||o;return n?a.createElement(b,i(i({ref:t},d),{},{components:n})):a.createElement(b,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},642:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={id:"decorators_injectable",title:"Module: decorators/injectable",sidebar_label:"decorators/injectable",sidebar_position:0,custom_edit_url:null},i=void 0,l={unversionedId:"api/reactant-module/modules/decorators_injectable",id:"api/reactant-module/modules/decorators_injectable",title:"Module: decorators/injectable",description:"Functions",source:"@site/docs/api/reactant-module/modules/decorators_injectable.md",sourceDirName:"api/reactant-module/modules",slug:"/api/reactant-module/modules/decorators_injectable",permalink:"/docs/api/reactant-module/modules/decorators_injectable",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"decorators_injectable",title:"Module: decorators/injectable",sidebar_label:"decorators/injectable",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"PluginModule",permalink:"/docs/api/reactant-module/classes/core_plugin.PluginModule"},next:{title:"decorators/inject",permalink:"/docs/api/reactant-di/modules/decorators_inject"}},c={},s=[{value:"Functions",id:"functions",level:2},{value:"injectable",id:"injectable",level:3},{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in",level:4}],d={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"injectable"},"injectable"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"injectable"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),"): (",(0,r.kt)("inlineCode",{parentName:"p"},"target"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"any")),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"You can use ",(0,r.kt)("inlineCode",{parentName:"p"},"@injectable()")," to decorate an injectable module, which will also allow ",(0,r.kt)("inlineCode",{parentName:"p"},"emitDecoratorMetadata")," to take effect in the decorated class, so the corresponding ",(0,r.kt)("inlineCode",{parentName:"p"},"@inject()")," is optional."),(0,r.kt)("p",null,"But if you don't want to use ",(0,r.kt)("inlineCode",{parentName:"p"},"@injectable()"),", then the dependency injection decorator for constructors such as ",(0,r.kt)("inlineCode",{parentName:"p"},"@inject()")," is required, and it must be imported in the corresponding ",(0,r.kt)("inlineCode",{parentName:"p"},"modules")," startup configuration. Therefore, in most cases, it is recommended to use ",(0,r.kt)("inlineCode",{parentName:"p"},"@injectable()"),"."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"@injectable()\nclass Bar {\n  getValue() {\n    return 'bar';\n  }\n}\n\nclass Foo {\n  constructor(@inject() public bar: Bar) {}\n}\n\n@injectable()\nclass FooBar {\n  constructor(public bar: Bar, public foo: Foo) {}\n}\n\nconst fooBar = testBed({\n  modules: [\n   Foo // `Foo` is required, but `Bar` will be injected automatically.\n ],\n  main: FooBar,\n});\n\nexpect(fooBar.instance.foo.getValue()).toBe('foo');\n")),(0,r.kt)("p",null,"If you use JavaScript, then you can only use ",(0,r.kt)("inlineCode",{parentName:"p"},"@injectable()")," to define the full dependency metadata."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"@injectable()\nclass Bar {\n  getValue() {\n    return 'bar';\n  }\n}\n\n@injectable()\nclass Foo {\n  getValue() {\n    return 'foo';\n  }\n}\n\n@injectable({\n  name: 'fooBar',\n  deps: [Bar,  { provide: 'foo' }],\n})\nclass FooBar {\n  constructor(bar, foo) {\n    this.bar = bar;\n    this.foo = foo;\n  }\n}\n\nconst fooBar = testBed({\n  modules: [\n   Bar,\n   { provide: 'foo', useClass: Foo },\n ],\n  main: FooBar,\n});\n\nexpect(fooBar.instance.foo.getValue()).toBe('foo');\n")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ModuleDecoratorOptions"))))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fn")),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"target"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"any")),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"target")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"any"))))),(0,r.kt)("h5",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"any")),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/unadlib/reactant/blob/8deee953/packages/reactant-module/src/decorators/injectable.ts#L80"},"packages/reactant-module/src/decorators/injectable.ts:80")))}p.isMDXComponent=!0}}]);