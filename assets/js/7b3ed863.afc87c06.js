"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2657],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,g=d["".concat(c,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(g,i(i({ref:t},s),{},{components:n})):a.createElement(g,i({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[d]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7051:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>l});var a=n(3117),o=(n(7294),n(3905));const r={sidebar_position:2},i="Concepts",p={unversionedId:"getting-started/concepts",id:"getting-started/concepts",title:"Concepts",description:"Reactant only needs to learn a few APIs(ViewModule, injectable, useConnector, action, state, and createApp) for efficient react development.",source:"@site/docs/getting-started/concepts.md",sourceDirName:"getting-started",slug:"/getting-started/concepts",permalink:"/docs/getting-started/concepts",draft:!1,editUrl:"https://github.com/unadlib/reactant/tree/master/website/docs/getting-started/concepts.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/getting-started/installation"},next:{title:"Using create-react-app",permalink:"/docs/getting-started/using-create-react-app"}},c={},l=[{value:"Service Module",id:"service-module",level:2},{value:"View Module",id:"view-module",level:2},{value:"Bootstrap",id:"bootstrap",level:2},{value:"Plugin Module",id:"plugin-module",level:2}],s={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"concepts"},"Concepts"),(0,o.kt)("p",null,"Reactant only needs to learn a few APIs(ViewModule, injectable, useConnector, action, state, and createApp) for efficient react development."),(0,o.kt)("p",null,"In addition to the basics of React, Reactant introduces two new concepts, ",(0,o.kt)("a",{parentName:"p",href:"#view-module"},(0,o.kt)("inlineCode",{parentName:"a"},"ViewModule"))," and ",(0,o.kt)("a",{parentName:"p",href:"#plugin-module"},(0,o.kt)("inlineCode",{parentName:"a"},"PluginModule")),"."),(0,o.kt)("h2",{id:"service-module"},"Service Module"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@state")," used to decorate a module immutable state, ",(0,o.kt)("inlineCode",{parentName:"p"},"@action")," used to decorate a function to change the module state. Although the decorated state is an immutable state, you can actually update the state in this module using mutations in the method decorated by ",(0,o.kt)("inlineCode",{parentName:"p"},"@action"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@injectable")," is used to decorate a module that can be injected. While Reactant also supports modules that do not require ",(0,o.kt)("inlineCode",{parentName:"p"},"@injectable")," decoration in advance, we recommend ",(0,o.kt)("inlineCode",{parentName:"p"},"@injectable")," decoration for any module that requires dependency injection."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"@injectable")," parameters in TypeScript and JavaScript are completely different, See ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/reactant-module/modules/decorators_injectable"},"@injectable")," for more details.")),(0,o.kt)("p",null,"For Example, ",(0,o.kt)("inlineCode",{parentName:"p"},"Counter")," project set up with ",(0,o.kt)("inlineCode",{parentName:"p"},"TypeScript"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { injectable, action, state } from 'reactant';\n\n@injectable()\nclass Counter {\n  @state\n  count = 0;\n\n  @action\n  increase() {\n    this.count += 1;\n  }\n\n  @action\n  decrease() {\n    this.count -= 1;\n  }\n\n  doSomething() {\n    //\n  }\n}\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Reactant provides dependency injection features, see ",(0,o.kt)("a",{parentName:"p",href:"/docs/advanced-guides/di"},"dependency injection"),".")),(0,o.kt)("h2",{id:"view-module"},"View Module"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ViewModule")," is a core concept of Reactant. It will be defined the dependencies and logic between non-view modules and UI components. It embodies the separation of attention, where the separation of UI logic and business logic is coalesced."),(0,o.kt)("p",null,"Dependency injection of service modules using ",(0,o.kt)("inlineCode",{parentName:"p"},"ViewModule")," and connection injection of state in ",(0,o.kt)("inlineCode",{parentName:"p"},"component"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { injectable, ViewModule, useConnector } from 'reactant';\n// import `Counter`\n\n@injectable()\nclass AppView extends ViewModule {\n  constructor(public counter: Counter) {\n    super();\n  }\n\n  component() {\n    const count = useConnector(() => this.counter.count);\n    return (\n      <button type=\"button\" onClick={() => this.counter.increase()}>\n        {count}\n      </button>\n    );\n  }\n}\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useConnector")," parameter also supports object maps, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"useConnector(() => { count: this.counter.count })"),", which works in most scenarios. When the state is updated, ",(0,o.kt)("inlineCode",{parentName:"p"},"useConnector")," will automatically do the shallow comparison for it to determine if the component needs to be updated.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"ViewModule"),"can also use ",(0,o.kt)("inlineCode",{parentName:"p"},"@state")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"@action"),", and generally it will use ",(0,o.kt)("inlineCode",{parentName:"p"},"@computed")," for computing derived data.")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/reactant-module/classes/core_view.ViewModule"},(0,o.kt)("inlineCode",{parentName:"a"},"ViewModule"))," for more information."),(0,o.kt)("h2",{id:"bootstrap"},"Bootstrap"),(0,o.kt)("p",null,"Finally, use ",(0,o.kt)("inlineCode",{parentName:"p"},"createApp")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"bootstrap")," to run the project. Reactant configures different dependency injection configurations via ",(0,o.kt)("inlineCode",{parentName:"p"},"createApp"),", which also supports other configurations such as ",(0,o.kt)("strong",{parentName:"p"},"middleware")," and Reactant ",(0,o.kt)("strong",{parentName:"p"},"plugins"),". See more ",(0,o.kt)("a",{parentName:"p",href:"/docs/advanced-guides/hooks"},"advanced guides")," about Reactant."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { render } from 'reactant-web';\nimport { createApp } from 'reactant';\n// need to import `AppView`\n\nconst app = createApp({\n  main: AppView,\n  render,\n});\n\napp.bootstrap(document.getElementById('root'));\n")),(0,o.kt)("p",null,"This is the demo about ",(0,o.kt)("inlineCode",{parentName:"p"},"reactant-native")," for native apps."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { createApp } from 'reactant';\nimport { render } from 'reactant-native';\nimport { name as appName } from './app.json';\n// need to import `AppView`\n\nconst app = createApp({\n  main: AppView,\n  render,\n});\n\napp.bootstrap(appName);\n")),(0,o.kt)("h2",{id:"plugin-module"},"Plugin Module"),(0,o.kt)("p",null,"Plugin Module is based on Redux middleware and React Context, so the Plugin Module can be encapsulated in a simple API that makes middleware and Context incredibly easy to use."),(0,o.kt)("p",null,"For example, this is a persistence plugin module that requires only simple configuration to achieve persistence."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import {\n  StorageOptions,\n  localStorage,\n  IStorageOptions,\n} from 'reactant-storage';\n\n@injectable({\n  name: 'bar'\n})\nclass HomeView extends ViewModule {\n  constructor(public storage: Storage) {\n    super();\n    this.storage.setStorage(this, {\n      whitelist: ['test'],\n    });\n  }\n\n  @state\n  test = 'test';\n}\n\nconst app = createApp({\n  modules: [\n    {\n      provide: StorageOptions,\n      useValue: {\n        whitelist: [],\n        storage: localStorage,\n        loading: <div>loading</div>,\n      } as IStorageOptions,\n    },\n  ],\n  main: HomeView,\n  render,\n  devOptions: {\n    reduxDevTools: true,\n  },\n});\n")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/reactant-module/classes/core_plugin.PluginModule"},(0,o.kt)("inlineCode",{parentName:"a"},"PluginModule"))," for more information."))}u.isMDXComponent=!0}}]);